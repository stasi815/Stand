from django.conf import settings
from django.db import models
from django.urls import reverse
from django.utils.text import slugify
from django.utils import timezone
from django.contrib.auth.models import User

# Create your models here.

class Item(models.Model):
    name = models.CharField(max_length=200)
    description = models.CharField(max_length=200)
    starting_bid = models.FloatField(verbose_name='Starting Bid')
    min_bid_increment = models.FloatField(verbose_name='Minimun Bid Increment')
    value = models.FloatField()
    current_bid = models.FloatField(verbose_name='Current Highest Bid')
    image = models.ImageField()
    slug = models.CharField(max_length=settings.AUCTION_NAME_MAX_LENGTH, blank=True, editable=False, help_text="Unique URL path to access this page. Generated by the system.")

    def __str__(self):
        return self.name

    def get_absolute_url(self):
        """ Returns a fully-qualified path for a page (/new-item-page). """
        path_components = {'slug': self.slug}
        return reverse("item-details-page", kwargs=path_components)

    def save(self, *args, **kwargs):
        """ Creates a URL safe slug automatically when a new page is created. """
        if not self.pk:
            self.slug = slugify(self.name, allow_unicode=True)

        return super(Item, self).save(*args, **kwargs)
class Auction(models.Model):
    name = models.CharField(max_length=200)
    description = models.CharField(max_length=200)
    start_date = models.DateTimeField('Start Date and Time: format YYYY-MM-DD HH:MM:SS')
    end_date = models.DateTimeField('Auction Close Date and Time: format YYYY-MM-DD HH:MM:SS')
    slug = models.CharField(max_length=settings.AUCTION_NAME_MAX_LENGTH, blank=True, editable=False, help_text="Unique URL path to access this page. Generated by the system.")
    item = models.ForeignKey(Item, on_delete=models.CASCADE)

    def __str__(self):
        return self.name

    def get_absolute_url(self):
        """ Returns a fully-qualified path for a page (/new-auction-page). """
        path_components = {'slug': self.slug}
        return reverse("auction-details-page", kwargs=path_components)

    def save(self, *args, **kwargs):
        """ Creates a URL safe slug automatically when a new page is created. """
        if not self.pk:
            self.slug = slugify(self.name, allow_unicode=True)

        return super(Auction, self).save(*args, **kwargs)
class Organization(models.Model):
    name = models.CharField(max_length=200)
    description = models.CharField(max_length=200)
    specific_cause = models.CharField(max_length=200)
    auction = models.ForeignKey(Auction, on_delete=models.CASCADE)

    def __str__(self):
        return self.name

class OrderItem(models.Model):
    item = models.ForeignKey(Item, on_delete=models.CASCADE)

    def __str__(self):
        return self.name

class Order(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    items = models.ManyToManyField(OrderItem)
    order_start = models.DateTimeField(auto_now_add=True)
    ordered_date = models.DateTimeField()
    ordered = models.BooleanField(default=False)

    def __str__(self):
        return self.user.username

